#+title: C Orchard Generator
#+author: Gerard R. Acebes
#+email:  gerard.ribas1@estudiant.uib.cat

#+HTML_HEAD_EXTRA: <style> .TOC_2_org { display: none; } </style> \
#+options: toc:nil
#+property: header-args :results silent

** Table of contents

*NOTE*. This README applies for UNIX systems, it may be different in other OS such as Windows.

** Table of contents :TOC:
  - [[#table-of-contents][Table of contents]]
  - [[#dependencies][Dependencies]]
  - [[#usage][Usage]]
  - [[#configmk][config.mk]]
  - [[#c-files][C Files]]

** Dependencies
- =make= and a C compiler (=gcc= for example) for compiling.

** Usage
This programs are meant to be fast, so they must be recompiled when a parameter is changed. To change parameters, edit the =config.mk= file (see [[config.mk]] section for details) and then recompile executing this command (in this folder):
#+begin_src sh
  make all clean
#+end_src
You can replace /all/ with /generate/ or /randgen/ to recompile only one of the main files.

*** Generate networks
Now, to generate networks, just execute the following:
#+begin_src sh
  ./generate
#+end_src

*** Generate random networks
To generate random networks, execute:
#+begin_src sh
  ./randgen 10
#+end_src
for example, if you want to generate 10 random networks (they may be repeated). If no number is passed, it will return only one.

** config.mk
Go to =config.mk= to configure the parameters before compiling. This file is commented with the necessary instructions, so go and check them.

The parameters to be configured are the following: =N=, =MAXLENGTH=,  =CONDITION=, =OUTPUT_FUNC=, =OUTPUT_TOTAL=, =OUTPUT_ALL=, =PARALLEL= and =PARALLEL_PRINT_FINISHED=.

*NOTE*. The options =PARALLEL= and =PARALLEL_PRINT_FINISHED= are available only on UNIX systems such as GNU/Linux and Mac OS.

You can also set this variables in the =make= command directly, for example =make N=5 CONDITION=condTC all clean=.

** C Files
To check function definitions, go to the header files (/.h/), which are implemented in their respective /.c/ files. There are two files with no header, which are the main programs.

- =polynomial.c=, =sequence.c=: the implementations of the polynomial and the sequence structures, respectively.
- =functions.c=: the conditions and the output of the algorithm.
- =globals.h=: definitions of macros if were not defined by /config.mk./

  | Name         | Description                              |
  |--------------+------------------------------------------|
  | condNone     | don't restrict the networks              |
  | condSF       | only generate /stack-free/ networks        |
  | condTC       | only generate /tree-child/ networks        |
  | printNothing | do nothing with the output               |
  | printSeq     | print to /stdout/ the generated CPS        |
  | printPol     | print to /stdout/ the generated polynomial |
  | printTexPol  | Same in LaTeX format                     |

